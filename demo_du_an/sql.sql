-- ==========================================
-- üì¶ ChildGrowthTracker - FULL DATABASE SCRIPT
-- ==========================================
-- T·ªïng h·ª£p ƒë·∫ßy ƒë·ªß c√°c b·∫£ng d·ª±a tr√™n y√™u c·∫ßu ƒë·ªÅ t√†i v√† c√°c file trong project

-- 1. T·∫†O DATABASE
CREATE DATABASE ChildGrowthTracker;
GO

USE ChildGrowthTracker;
GO

-- 2. USERS
CREATE TABLE Users (
    Id INT IDENTITY PRIMARY KEY,
    FullName NVARCHAR(100),
    Email NVARCHAR(100) UNIQUE NOT NULL,
    PasswordHash NVARCHAR(255) NOT NULL,
    Role NVARCHAR(20) CHECK (Role IN ('parent', 'doctor', 'admin')) NOT NULL,
    Status NVARCHAR(20) CHECK (Status IN ('active', 'inactive', 'pending')) DEFAULT 'active',
    CreatedAt DATETIME DEFAULT GETDATE(),
    ExpiryDate DATETIME NULL  -- Th√™m tr∆∞·ªùng h·∫øt h·∫°n t√†i kho·∫£n
);

-- 3. CHILDREN
CREATE TABLE Children (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    FullName NVARCHAR(100),
    Gender NVARCHAR(10) CHECK (Gender IN ('male', 'female')),
    Birthday DATE,
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 4. GROWTH RECORDS
CREATE TABLE GrowthRecords (
    Id INT IDENTITY PRIMARY KEY,
    ChildId INT FOREIGN KEY REFERENCES Children(Id),
    RecordDate DATE NOT NULL,
    HeightCm FLOAT,
    WeightKg FLOAT,
    BMI AS (WeightKg / POWER(HeightCm / 100.0, 2)),
    WarningFlag BIT DEFAULT 0,
    WarningType NVARCHAR(50)
);

-- 5. GROWTH ALERTS
CREATE TABLE GrowthAlerts (
    Id INT IDENTITY PRIMARY KEY,
    GrowthRecordId INT FOREIGN KEY REFERENCES GrowthRecords(Id),
    AlertType NVARCHAR(50),
    Severity NVARCHAR(20),
    Description NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 6. MEMBERSHIPS (G√≥i th√†nh vi√™n)
CREATE TABLE Memberships (
    Id INT IDENTITY PRIMARY KEY,
    Name NVARCHAR(100),
    Price DECIMAL(10,2),
    DurationDays INT,
    Description NVARCHAR(MAX)
);

-- 7. USER MEMBERSHIPS (L·ªãch s·ª≠ s·ª≠ d·ª•ng g√≥i)
CREATE TABLE UserMemberships (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    MembershipId INT FOREIGN KEY REFERENCES Memberships(Id),
    StartDate DATE,
    EndDate DATE,
    PaymentStatus NVARCHAR(20) CHECK (PaymentStatus IN ('pending', 'paid', 'failed'))
);

-- 8. CONSULT REQUESTS
CREATE TABLE ConsultRequests (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    ChildId INT FOREIGN KEY REFERENCES Children(Id),
    DoctorId INT FOREIGN KEY REFERENCES Doctors(Id),  -- Th√™m b√°c sƒ©
    Message NVARCHAR(MAX),
    Status NVARCHAR(20) CHECK (Status IN ('pending', 'replied', 'completed')) DEFAULT 'pending',
    ReminderDate DATETIME DEFAULT NULL,  -- Th·ªùi gian nh·∫Øc nh·ªü
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 9. CONSULT RESPONSES
CREATE TABLE ConsultResponses (
    Id INT IDENTITY PRIMARY KEY,
    ConsultId INT FOREIGN KEY REFERENCES ConsultRequests(Id),
    DoctorId INT FOREIGN KEY REFERENCES Doctors(Id),
    ResponseText NVARCHAR(MAX),
    ResponseDate DATETIME DEFAULT GETDATE()
);

-- 10. FEEDBACK
CREATE TABLE Feedback (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Message NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 11. BLOGS
CREATE TABLE Blogs (
    Id INT IDENTITY PRIMARY KEY,
    Title NVARCHAR(255),
    Content NVARCHAR(MAX),
    AuthorId INT FOREIGN KEY REFERENCES Users(Id),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 12. FAQ
CREATE TABLE FAQs (
    Id INT IDENTITY PRIMARY KEY,
    Question NVARCHAR(255),
    Answer NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 13. SHARED GROWTH DATA
CREATE TABLE SharedGrowthData (
    Id INT IDENTITY PRIMARY KEY,
    ChildId INT FOREIGN KEY REFERENCES Children(Id),
    DoctorId INT FOREIGN KEY REFERENCES Users(Id),
    SharedAt DATETIME DEFAULT GETDATE(),
    CanComment BIT DEFAULT 1
);

-- 14. USER LOGS (L·ªãch s·ª≠ ho·∫°t ƒë·ªông ng∆∞·ªùi d√πng)
CREATE TABLE UserLogs (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    Action NVARCHAR(255),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 15. PAYMENTS (Thanh to√°n cho g√≥i d·ªãch v·ª•)
CREATE TABLE Payments (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    MembershipId INT FOREIGN KEY REFERENCES Memberships(Id),
    Amount DECIMAL(10, 2),
    PaymentStatus NVARCHAR(20) CHECK (PaymentStatus IN ('pending', 'paid', 'failed')),
    PaymentDate DATETIME DEFAULT GETDATE(),
    TransactionId NVARCHAR(100) -- Tham chi·∫øu m√£ giao d·ªãch
);

-- 16. HEALTH REPORTS (B√°o c√°o s·ª©c kh·ªèe t·ªïng h·ª£p)
CREATE TABLE HealthReports (
    Id INT IDENTITY PRIMARY KEY,
    ChildId INT FOREIGN KEY REFERENCES Children(Id),
    ReportDate DATETIME DEFAULT GETDATE(),
    HeightCm FLOAT,
    WeightKg FLOAT,
    BMI FLOAT,
    Status NVARCHAR(50) CHECK (Status IN ('Normal', 'Underweight', 'Overweight', 'Obese')),
    ReportSummary NVARCHAR(MAX),
    IsReviewed BIT DEFAULT 0  -- Th√™m tr∆∞·ªùng ki·ªÉm tra xem b√°o c√°o ƒë√£ ƒë∆∞·ª£c xem hay ch∆∞a
);

-- 17. DOCTORS (Qu·∫£n l√Ω b√°c sƒ©)
CREATE TABLE Doctors (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    Specialty NVARCHAR(100),
    LicenseNumber NVARCHAR(100),
    CreatedAt DATETIME DEFAULT GETDATE()
);

-- 18. SERVICES (D·ªãch v·ª• v√† g√≥i b·ªï sung)
CREATE TABLE Services (
    Id INT IDENTITY PRIMARY KEY,
    Name NVARCHAR(100),
    Description NVARCHAR(MAX),
    Price DECIMAL(10, 2),
    ServiceType NVARCHAR(50) CHECK (ServiceType IN ('consultation', 'checkup', 'nutrition'))
);

-- 19. NOTIFICATIONS (Th√¥ng b√°o / nh·∫Øc nh·ªü b√°c sƒ©)
CREATE TABLE Notifications (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    Message NVARCHAR(MAX),
    NotificationType NVARCHAR(50) CHECK (NotificationType IN ('alert', 'reminder', 'update')),
    Status NVARCHAR(20) CHECK (Status IN ('sent', 'pending', 'failed')),
    CreatedAt DATETIME DEFAULT GETDATE(),
    SentAt DATETIME NULL,
    IsRead BIT DEFAULT 0  -- Th√™m c·ªôt ƒë·ªÉ ƒë√°nh d·∫•u ƒë√£ ƒë·ªçc hay ch∆∞a
);

-- 20. GROWTH MILESTONES (M·ªëc ph√°t tri·ªÉn chu·∫©n)
CREATE TABLE GrowthMilestones (
    Id INT IDENTITY PRIMARY KEY,
    AgeMonths INT,  -- ƒê·ªô tu·ªïi (th√°ng)
    HeightMin FLOAT, -- Chi·ªÅu cao t·ªëi thi·ªÉu
    HeightMax FLOAT, -- Chi·ªÅu cao t·ªëi ƒëa
    WeightMin FLOAT, -- C√¢n n·∫∑ng t·ªëi thi·ªÉu
    WeightMax FLOAT, -- C√¢n n·∫∑ng t·ªëi ƒëa
    BMI_Min FLOAT,   -- BMI t·ªëi thi·ªÉu
    BMI_Max FLOAT,   -- BMI t·ªëi ƒëa
    Category NVARCHAR(50) CHECK (Category IN ('Normal', 'Underweight', 'Overweight', 'Obese'))
);

-- 21. SESSION LOGS (L·ªãch s·ª≠ ƒëƒÉng nh·∫≠p ng∆∞·ªùi d√πng)
CREATE TABLE SessionLogs (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    LoginTime DATETIME DEFAULT GETDATE(),
    LogoutTime DATETIME NULL,
    SessionDuration INT DEFAULT 0,  -- S·ªë ph√∫t ƒë√£ ƒëƒÉng nh·∫≠p
    IPAddress NVARCHAR(50)
);

-- 22. DASHBOARD STATS (Th·ªëng k√™ t·ªïng h·ª£p cho Dashboard)
CREATE TABLE DashboardStats (
    Id INT IDENTITY PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES Users(Id),
    TotalChildren INT DEFAULT 0,
    TotalConsultRequests INT DEFAULT 0,
    TotalActiveMemberships INT DEFAULT 0,
    TotalAlerts INT DEFAULT 0,
    TotalSharedGrowthData INT DEFAULT 0,  -- Th√™m th·ªëng k√™ s·ªë l∆∞·ª£ng d·ªØ li·ªáu ph√°t tri·ªÉn ƒë√£ chia s·∫ª
    CreatedAt DATETIME DEFAULT GETDATE()
);
----
